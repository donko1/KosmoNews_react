{"ast":null,"code":"var _jsxFileName = \"/home/donkol/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/\\u041F\\u0440\\u043E\\u0433\\u0440\\u0430\\u043C\\u043C\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435/\\u043F\\u0440\\u043E\\u0433\\u0440\\u0430\\u043C\\u043C\\u044B \\u043D\\u0430 python/djanga/KosmoNews/kosmonews_react/src/Detail.js\";\nimport Layout from \"./Layout\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Detail = props => {\n  let news = props.news;\n  let themes = props.themes;\n  let date = new Date(news[\"date\"]);\n  let title = news[\"title\"];\n  let article_text = news[\"article_text\"];\n  let theme = themes[news[\"theme\"]];\n  const themeList = Object.values(themes);\n  let months = [\"января\", \"февраля\", \"марта\", \"апреля\", \"мая\", \"июня\", \"июля\", \"августа\", \"сентября\", \"октября\", \"ноября\", \"декабря\"];\n  let today = new Date(item.date);\n  let day = today.getDate();\n  let month = months[today.getMonth()];\n  let year = today.getFullYear();\n  let minutes = today.getMinutes();\n  let hours = today.getHours();\n  let formattedDate = `${hours}:${minutes}. ${day} ${month}`;\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    themes: themeList,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"formattedDate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_c = Detail;\nexport default Detail;\nvar _c;\n$RefreshReg$(_c, \"Detail\");","map":{"version":3,"names":["Layout","jsxDEV","_jsxDEV","Detail","props","news","themes","date","Date","title","article_text","theme","themeList","Object","values","months","today","item","day","getDate","month","getMonth","year","getFullYear","minutes","getMinutes","hours","getHours","formattedDate","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/donkol/Документы/Программирование/программы на python/djanga/KosmoNews/kosmonews_react/src/Detail.js"],"sourcesContent":["import Layout from \"./Layout\";\n\nconst Detail = (props) => {\n  let news = props.news;\n  let themes = props.themes;\n  let date = new Date(news[\"date\"]);\n  let title = news[\"title\"];\n  let article_text = news[\"article_text\"];\n  let theme = themes[news[\"theme\"]];\n  const themeList = Object.values(themes);\n\n  let months = [\n    \"января\",\n    \"февраля\",\n    \"марта\",\n    \"апреля\",\n    \"мая\",\n    \"июня\",\n    \"июля\",\n    \"августа\",\n    \"сентября\",\n    \"октября\",\n    \"ноября\",\n    \"декабря\",\n  ];\n\n  let today = new Date(item.date);\n  let day = today.getDate();\n  let month = months[today.getMonth()];\n  let year = today.getFullYear();\n  let minutes = today.getMinutes();\n  let hours = today.getHours();\n\n  let formattedDate = `${hours}:${minutes}. ${day} ${month}`;\n\n  return (\n    <Layout themes={themeList}>\n      <div>\n        <h1>{title}</h1>\n        <h4>formattedDate</h4>\n      </div>\n    </Layout>\n  );\n};\n\nexport default Detail;\n"],"mappings":";AAAA,OAAOA,MAAM,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,MAAMC,MAAM,GAAIC,KAAK,IAAK;EACxB,IAAIC,IAAI,GAAGD,KAAK,CAACC,IAAI;EACrB,IAAIC,MAAM,GAAGF,KAAK,CAACE,MAAM;EACzB,IAAIC,IAAI,GAAG,IAAIC,IAAI,CAACH,IAAI,CAAC,MAAM,CAAC,CAAC;EACjC,IAAII,KAAK,GAAGJ,IAAI,CAAC,OAAO,CAAC;EACzB,IAAIK,YAAY,GAAGL,IAAI,CAAC,cAAc,CAAC;EACvC,IAAIM,KAAK,GAAGL,MAAM,CAACD,IAAI,CAAC,OAAO,CAAC,CAAC;EACjC,MAAMO,SAAS,GAAGC,MAAM,CAACC,MAAM,CAACR,MAAM,CAAC;EAEvC,IAAIS,MAAM,GAAG,CACX,QAAQ,EACR,SAAS,EACT,OAAO,EACP,QAAQ,EACR,KAAK,EACL,MAAM,EACN,MAAM,EACN,SAAS,EACT,UAAU,EACV,SAAS,EACT,QAAQ,EACR,SAAS,CACV;EAED,IAAIC,KAAK,GAAG,IAAIR,IAAI,CAACS,IAAI,CAACV,IAAI,CAAC;EAC/B,IAAIW,GAAG,GAAGF,KAAK,CAACG,OAAO,CAAC,CAAC;EACzB,IAAIC,KAAK,GAAGL,MAAM,CAACC,KAAK,CAACK,QAAQ,CAAC,CAAC,CAAC;EACpC,IAAIC,IAAI,GAAGN,KAAK,CAACO,WAAW,CAAC,CAAC;EAC9B,IAAIC,OAAO,GAAGR,KAAK,CAACS,UAAU,CAAC,CAAC;EAChC,IAAIC,KAAK,GAAGV,KAAK,CAACW,QAAQ,CAAC,CAAC;EAE5B,IAAIC,aAAa,GAAI,GAAEF,KAAM,IAAGF,OAAQ,KAAIN,GAAI,IAAGE,KAAM,EAAC;EAE1D,oBACElB,OAAA,CAACF,MAAM;IAACM,MAAM,EAAEM,SAAU;IAAAiB,QAAA,eACxB3B,OAAA;MAAA2B,QAAA,gBACE3B,OAAA;QAAA2B,QAAA,EAAKpB;MAAK;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAChB/B,OAAA;QAAA2B,QAAA,EAAI;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEb,CAAC;AAACC,EAAA,GAzCI/B,MAAM;AA2CZ,eAAeA,MAAM;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}