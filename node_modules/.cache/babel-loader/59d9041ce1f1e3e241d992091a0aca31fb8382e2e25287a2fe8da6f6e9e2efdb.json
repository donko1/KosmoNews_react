{"ast":null,"code":"var _jsxFileName = \"/home/donkol/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/\\u041F\\u0440\\u043E\\u0433\\u0440\\u0430\\u043C\\u043C\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435/\\u043F\\u0440\\u043E\\u0433\\u0440\\u0430\\u043C\\u043C\\u044B \\u043D\\u0430 python/djanga/KosmoNews/kosmonews_react/src/App.js\";\nimport Layout from \"./Layout\";\nimport Detail from \"./Detail\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Index = props => {\n  let url = props.url;\n  fetch(\"/api/themes/\").then(response => response.json()).then(data => {\n    let themes = data;\n    fetch(`/api/${url}`).then(response => response.json()).then(data => {\n      let news = data;\n      const themeList = Object.values(themes);\n      return /*#__PURE__*/_jsxDEV(Layout, {\n        themes: themeList,\n        children: news.map((item, number) => {\n          let months = [\"января\", \"февраля\", \"марта\", \"апреля\", \"мая\", \"июня\", \"июля\", \"августа\", \"сентября\", \"октября\", \"ноября\", \"декабря\"];\n          let today = new Date(item.date);\n          let day = today.getDate();\n          let month = months[today.getMonth()];\n          let year = today.getFullYear();\n          let minutes = today.getMinutes();\n          let hours = today.getHours();\n          let formattedDate = `${hours}:${minutes}`;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"/\" + item.id,\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                children: item.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                children: formattedDate\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 23\n              }, this)]\n            }, number, true, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 19\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }, this);\n    });\n  });\n};\n_c = Index;\nconst App = () => {\n  return;\n  /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        component: Home\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/about\",\n        component: About\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 3\n  }, this);\n};\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"Index\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["Layout","Detail","BrowserRouter","Router","Route","jsxDEV","_jsxDEV","Index","props","url","fetch","then","response","json","data","themes","news","themeList","Object","values","children","map","item","number","months","today","Date","date","day","getDate","month","getMonth","year","getFullYear","minutes","getMinutes","hours","getHours","formattedDate","href","id","title","fileName","_jsxFileName","lineNumber","columnNumber","_c","App","exact","path","component","Home","About","_c2","$RefreshReg$"],"sources":["/home/donkol/Документы/Программирование/программы на python/djanga/KosmoNews/kosmonews_react/src/App.js"],"sourcesContent":["import Layout from \"./Layout\";\nimport Detail from \"./Detail\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nconst Index = (props) => {\n  let url = props.url;\n  fetch(\"/api/themes/\")\n    .then((response) => response.json())\n    .then((data) => {\n      let themes = data;\n      fetch(`/api/${url}`)\n        .then((response) => response.json())\n        .then((data) => {\n          let news = data;\n\n          const themeList = Object.values(themes);\n\n          return (\n            <Layout themes={themeList}>\n              {news.map((item, number) => {\n                let months = [\n                  \"января\",\n                  \"февраля\",\n                  \"марта\",\n                  \"апреля\",\n                  \"мая\",\n                  \"июня\",\n                  \"июля\",\n                  \"августа\",\n                  \"сентября\",\n                  \"октября\",\n                  \"ноября\",\n                  \"декабря\",\n                ];\n\n                let today = new Date(item.date);\n                let day = today.getDate();\n                let month = months[today.getMonth()];\n                let year = today.getFullYear();\n                let minutes = today.getMinutes();\n                let hours = today.getHours();\n\n                let formattedDate = `${hours}:${minutes}`;\n                return (\n                  <div>\n                    <a key={number} href={\"/\" + item.id}>\n                      <h1>{item.title}</h1>\n                      <h2>{formattedDate}</h2>\n                    </a>\n                  </div>\n                );\n              })}\n            </Layout>\n          );\n        });\n    });\n};\n\nconst App = () => {\n  return;\n  <Router>\n    <div>\n      <Route exact path=\"/\" component={Home} />\n      <Route path=\"/about\" component={About} />\n    </div>\n  </Router>;\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}