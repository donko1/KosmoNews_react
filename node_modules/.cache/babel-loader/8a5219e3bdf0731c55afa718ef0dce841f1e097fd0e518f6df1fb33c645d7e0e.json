{"ast":null,"code":"var _jsxFileName = \"/home/donkol/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/\\u041F\\u0440\\u043E\\u0433\\u0440\\u0430\\u043C\\u043C\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435/\\u043F\\u0440\\u043E\\u0433\\u0440\\u0430\\u043C\\u043C\\u044B \\u043D\\u0430 python/djanga/KosmoNews/kosmonews_react/src/App.js\";\nimport Layout from \"./Layout\";\nimport Detail from \"./Detail\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Index = url => {\n  let news = props.news;\n  let themes = props.themes;\n  const themeList = Object.values(themes);\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    themes: themeList,\n    children: news.map((item, number) => {\n      let months = [\"января\", \"февраля\", \"марта\", \"апреля\", \"мая\", \"июня\", \"июля\", \"августа\", \"сентября\", \"октября\", \"ноября\", \"декабря\"];\n      let today = new Date(item.date);\n      let day = today.getDate();\n      let month = months[today.getMonth()];\n      let year = today.getFullYear();\n      let minutes = today.getMinutes();\n      let hours = today.getHours();\n      let formattedDate = `${hours}:${minutes}`;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/\" + item.id,\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: item.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: formattedDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this)]\n        }, number, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n_c = Index;\nconst App = () => {\n  return;\n};\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"Index\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["Layout","Detail","BrowserRouter","Router","Route","jsxDEV","_jsxDEV","Index","url","news","props","themes","themeList","Object","values","children","map","item","number","months","today","Date","date","day","getDate","month","getMonth","year","getFullYear","minutes","getMinutes","hours","getHours","formattedDate","href","id","title","fileName","_jsxFileName","lineNumber","columnNumber","_c","App","_c2","$RefreshReg$"],"sources":["/home/donkol/Документы/Программирование/программы на python/djanga/KosmoNews/kosmonews_react/src/App.js"],"sourcesContent":["import Layout from \"./Layout\";\nimport Detail from \"./Detail\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nconst Index = (url) => {\n  let news = props.news;\n  let themes = props.themes;\n  const themeList = Object.values(themes);\n\n  return (\n    <Layout themes={themeList}>\n      {news.map((item, number) => {\n        let months = [\n          \"января\",\n          \"февраля\",\n          \"марта\",\n          \"апреля\",\n          \"мая\",\n          \"июня\",\n          \"июля\",\n          \"августа\",\n          \"сентября\",\n          \"октября\",\n          \"ноября\",\n          \"декабря\",\n        ];\n\n        let today = new Date(item.date);\n        let day = today.getDate();\n        let month = months[today.getMonth()];\n        let year = today.getFullYear();\n        let minutes = today.getMinutes();\n        let hours = today.getHours();\n\n        let formattedDate = `${hours}:${minutes}`;\n        return (\n          <div>\n            <a key={number} href={\"/\" + item.id}>\n              <h1>{item.title}</h1>\n              <h2>{formattedDate}</h2>\n            </a>\n          </div>\n        );\n      })}\n    </Layout>\n  );\n};\n\nconst App = () => {\n  return;\n};\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,MAAM,MAAM,UAAU;AAC7B,OAAOC,MAAM,MAAM,UAAU;AAC7B,SAASC,aAAa,IAAIC,MAAM,EAAEC,KAAK,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,MAAMC,KAAK,GAAIC,GAAG,IAAK;EACrB,IAAIC,IAAI,GAAGC,KAAK,CAACD,IAAI;EACrB,IAAIE,MAAM,GAAGD,KAAK,CAACC,MAAM;EACzB,MAAMC,SAAS,GAAGC,MAAM,CAACC,MAAM,CAACH,MAAM,CAAC;EAEvC,oBACEL,OAAA,CAACN,MAAM;IAACW,MAAM,EAAEC,SAAU;IAAAG,QAAA,EACvBN,IAAI,CAACO,GAAG,CAAC,CAACC,IAAI,EAAEC,MAAM,KAAK;MAC1B,IAAIC,MAAM,GAAG,CACX,QAAQ,EACR,SAAS,EACT,OAAO,EACP,QAAQ,EACR,KAAK,EACL,MAAM,EACN,MAAM,EACN,SAAS,EACT,UAAU,EACV,SAAS,EACT,QAAQ,EACR,SAAS,CACV;MAED,IAAIC,KAAK,GAAG,IAAIC,IAAI,CAACJ,IAAI,CAACK,IAAI,CAAC;MAC/B,IAAIC,GAAG,GAAGH,KAAK,CAACI,OAAO,CAAC,CAAC;MACzB,IAAIC,KAAK,GAAGN,MAAM,CAACC,KAAK,CAACM,QAAQ,CAAC,CAAC,CAAC;MACpC,IAAIC,IAAI,GAAGP,KAAK,CAACQ,WAAW,CAAC,CAAC;MAC9B,IAAIC,OAAO,GAAGT,KAAK,CAACU,UAAU,CAAC,CAAC;MAChC,IAAIC,KAAK,GAAGX,KAAK,CAACY,QAAQ,CAAC,CAAC;MAE5B,IAAIC,aAAa,GAAI,GAAEF,KAAM,IAAGF,OAAQ,EAAC;MACzC,oBACEvB,OAAA;QAAAS,QAAA,eACET,OAAA;UAAgB4B,IAAI,EAAE,GAAG,GAAGjB,IAAI,CAACkB,EAAG;UAAApB,QAAA,gBAClCT,OAAA;YAAAS,QAAA,EAAKE,IAAI,CAACmB;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACrBlC,OAAA;YAAAS,QAAA,EAAKkB;UAAa;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC;QAAA,GAFlBtB,MAAM;UAAAmB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAGX;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC;IAEV,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAEb,CAAC;AAACC,EAAA,GA1CIlC,KAAK;AA4CX,MAAMmC,GAAG,GAAGA,CAAA,KAAM;EAChB;AACF,CAAC;AAACC,GAAA,GAFID,GAAG;AAIT,eAAeA,GAAG;AAAC,IAAAD,EAAA,EAAAE,GAAA;AAAAC,YAAA,CAAAH,EAAA;AAAAG,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}