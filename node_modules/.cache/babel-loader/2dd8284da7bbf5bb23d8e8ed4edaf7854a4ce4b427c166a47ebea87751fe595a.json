{"ast":null,"code":"var _jsxFileName = \"/home/donkol/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/\\u041F\\u0440\\u043E\\u0433\\u0440\\u0430\\u043C\\u043C\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435/\\u043F\\u0440\\u043E\\u0433\\u0440\\u0430\\u043C\\u043C\\u044B \\u043D\\u0430 python/djanga/KosmoNews/kosmonews_react/src/Main.js\",\n  _s2 = $RefreshSig$();\nimport Layout from \"./Layout\";\nimport { useState, useEffect } from \"react\";\nimport CroppedImage from \"./Img\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Index = props => {\n  _s2();\n  var _s = $RefreshSig$();\n  const [word, setWord] = useState(useParams());\n  _s(useEffect(_s(() => {\n    _s();\n    setWord(useParams());\n  }, \"zmUErVVHtqqM6DIDQ9M8H17P2nM=\", false, function () {\n    return [useParams];\n  }), [word]), \"zmUErVVHtqqM6DIDQ9M8H17P2nM=\", false, function () {\n    return [useParams];\n  });\n  if (props.url === \"///\") {\n    var url = `search/${word}`;\n  } else {\n    var url = `${props.url}/`;\n  }\n  const [themes, setThemes] = useState([]);\n  const [news, setNews] = useState([]);\n  useEffect(() => {\n    // fetch(\"/api/themes/\")\n    fetch(\"http://localhost:8000/api/themes/\").then(response => response.json()).then(async data => {\n      setThemes(data);\n      // const response = await fetch(`/api/${props.url}/`);\n      const response = await fetch(`http://localhost:8000/api/${url}`);\n      const data_1 = await response.json();\n      setNews(data_1);\n    });\n  }, [props.url]);\n  const themeList = Object.values(themes);\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    themes: themeList,\n    children: news.map((item, number) => {\n      let img = item.image;\n      let months = [\"января\", \"февраля\", \"марта\", \"апреля\", \"мая\", \"июня\", \"июля\", \"августа\", \"сентября\", \"октября\", \"ноября\", \"декабря\"];\n      let today = new Date(item.date);\n      let day = today.getDate();\n      let month = months[today.getMonth()];\n      let year = today.getFullYear();\n      let minutes = today.getMinutes();\n      let hours = today.getHours();\n      const intMinutes = parseInt(minutes, 10);\n      const formattedMinutes = intMinutes < 10 ? `0${intMinutes}` : intMinutes;\n      let formattedDate = `${hours}:${formattedMinutes}`;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/\" + item.id,\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: item.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: formattedDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(CroppedImage, {\n            src: img,\n            width: 400,\n            height: 400\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this)]\n        }, number, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s2(Index, \"Pd5iuN3hWU95HjmklC6zGYmm4z4=\", false, function () {\n  return [useParams];\n});\n_c = Index;\nexport default Index;\nvar _c;\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"names":["Layout","useState","useEffect","CroppedImage","useParams","jsxDEV","_jsxDEV","Index","props","_s2","_s","$RefreshSig$","word","setWord","url","themes","setThemes","news","setNews","fetch","then","response","json","data","data_1","themeList","Object","values","children","map","item","number","img","image","months","today","Date","date","day","getDate","month","getMonth","year","getFullYear","minutes","getMinutes","hours","getHours","intMinutes","parseInt","formattedMinutes","formattedDate","href","id","title","fileName","_jsxFileName","lineNumber","columnNumber","src","width","height","_c","$RefreshReg$"],"sources":["/home/donkol/Документы/Программирование/программы на python/djanga/KosmoNews/kosmonews_react/src/Main.js"],"sourcesContent":["import Layout from \"./Layout\";\nimport { useState, useEffect } from \"react\";\nimport CroppedImage from \"./Img\";\nimport { useParams } from \"react-router-dom\";\n\nconst Index = (props) => {\n  const [word, setWord] = useState(useParams());\n  useEffect(() => {\n    setWord(useParams());\n  }, [word]);\n  if (props.url === \"///\") {\n    var url = `search/${word}`;\n  } else {\n    var url = `${props.url}/`;\n  }\n  const [themes, setThemes] = useState([]);\n  const [news, setNews] = useState([]);\n  useEffect(() => {\n    // fetch(\"/api/themes/\")\n    fetch(\"http://localhost:8000/api/themes/\")\n      .then((response) => response.json())\n      .then(async (data) => {\n        setThemes(data);\n        // const response = await fetch(`/api/${props.url}/`);\n        const response = await fetch(`http://localhost:8000/api/${url}`);\n        const data_1 = await response.json();\n        setNews(data_1);\n      });\n  }, [props.url]);\n  const themeList = Object.values(themes);\n\n  return (\n    <Layout themes={themeList}>\n      {news.map((item, number) => {\n        let img = item.image;\n        let months = [\n          \"января\",\n          \"февраля\",\n          \"марта\",\n          \"апреля\",\n          \"мая\",\n          \"июня\",\n          \"июля\",\n          \"августа\",\n          \"сентября\",\n          \"октября\",\n          \"ноября\",\n          \"декабря\",\n        ];\n\n        let today = new Date(item.date);\n        let day = today.getDate();\n        let month = months[today.getMonth()];\n        let year = today.getFullYear();\n        let minutes = today.getMinutes();\n        let hours = today.getHours();\n        const intMinutes = parseInt(minutes, 10);\n        const formattedMinutes =\n          intMinutes < 10 ? `0${intMinutes}` : intMinutes;\n\n        let formattedDate = `${hours}:${formattedMinutes}`;\n        return (\n          <div>\n            <a key={number} href={\"/\" + item.id}>\n              <h1>{item.title}</h1>\n              <h2>{formattedDate}</h2>\n              <CroppedImage src={img} width={400} height={400} />\n            </a>\n          </div>\n        );\n      })}\n    </Layout>\n  );\n};\n\nexport default Index;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}