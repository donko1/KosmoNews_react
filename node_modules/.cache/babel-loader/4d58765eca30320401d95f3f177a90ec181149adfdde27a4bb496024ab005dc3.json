{"ast":null,"code":"var _jsxFileName = \"/home/donkol/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/\\u041F\\u0440\\u043E\\u0433\\u0440\\u0430\\u043C\\u043C\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435/\\u043F\\u0440\\u043E\\u0433\\u0440\\u0430\\u043C\\u043C\\u044B \\u043D\\u0430 python/djanga/KosmoNews/kosmonews_react/src/Detail.js\";\nimport Layout from \"./Layout\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Detail = props => {\n  let news = props.news;\n  let themes = props.themes;\n  let date = new Date(news[\"date\"]);\n  let title = news[\"title\"];\n  let article_text = news[\"article_text\"];\n  let theme = themes[news[\"theme\"]];\n  const themeList = Object.values(themes);\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    themes: themeList,\n    children: news.map((item, number) => {\n      let months = [\"января\", \"февраля\", \"марта\", \"апреля\", \"мая\", \"июня\", \"июля\", \"августа\", \"сентября\", \"октября\", \"ноября\", \"декабря\"];\n      let today = new Date(item.date);\n      let day = today.getDate();\n      let month = months[today.getMonth()];\n      let year = today.getFullYear();\n      let minutes = today.getMinutes();\n      let hours = today.getHours();\n      let formattedDate = `${hours}:${minutes}`;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/\" + item.id,\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: item.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: formattedDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this)]\n        }, number, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n_c = Detail;\nexport default Detail;\nvar _c;\n$RefreshReg$(_c, \"Detail\");","map":{"version":3,"names":["Layout","jsxDEV","_jsxDEV","Detail","props","news","themes","date","Date","title","article_text","theme","themeList","Object","values","children","map","item","number","months","today","day","getDate","month","getMonth","year","getFullYear","minutes","getMinutes","hours","getHours","formattedDate","href","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/donkol/Документы/Программирование/программы на python/djanga/KosmoNews/kosmonews_react/src/Detail.js"],"sourcesContent":["import Layout from \"./Layout\";\n\nconst Detail = (props) => {\n  let news = props.news;\n  let themes = props.themes;\n  let date = new Date(news[\"date\"]);\n  let title = news[\"title\"];\n  let article_text = news[\"article_text\"];\n  let theme = themes[news[\"theme\"]];\n  const themeList = Object.values(themes);\n\n  return (\n    <Layout themes={themeList}>\n      {news.map((item, number) => {\n        let months = [\n          \"января\",\n          \"февраля\",\n          \"марта\",\n          \"апреля\",\n          \"мая\",\n          \"июня\",\n          \"июля\",\n          \"августа\",\n          \"сентября\",\n          \"октября\",\n          \"ноября\",\n          \"декабря\",\n        ];\n\n        let today = new Date(item.date);\n        let day = today.getDate();\n        let month = months[today.getMonth()];\n        let year = today.getFullYear();\n        let minutes = today.getMinutes();\n        let hours = today.getHours();\n\n        let formattedDate = `${hours}:${minutes}`;\n        return (\n          <div>\n            <a key={number} href={\"/\" + item.id}>\n              <h1>{item.title}</h1>\n              <h2>{formattedDate}</h2>\n            </a>\n          </div>\n        );\n      })}\n    </Layout>\n  );\n};\n\nexport default Detail;\n"],"mappings":";AAAA,OAAOA,MAAM,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,MAAMC,MAAM,GAAIC,KAAK,IAAK;EACxB,IAAIC,IAAI,GAAGD,KAAK,CAACC,IAAI;EACrB,IAAIC,MAAM,GAAGF,KAAK,CAACE,MAAM;EACzB,IAAIC,IAAI,GAAG,IAAIC,IAAI,CAACH,IAAI,CAAC,MAAM,CAAC,CAAC;EACjC,IAAII,KAAK,GAAGJ,IAAI,CAAC,OAAO,CAAC;EACzB,IAAIK,YAAY,GAAGL,IAAI,CAAC,cAAc,CAAC;EACvC,IAAIM,KAAK,GAAGL,MAAM,CAACD,IAAI,CAAC,OAAO,CAAC,CAAC;EACjC,MAAMO,SAAS,GAAGC,MAAM,CAACC,MAAM,CAACR,MAAM,CAAC;EAEvC,oBACEJ,OAAA,CAACF,MAAM;IAACM,MAAM,EAAEM,SAAU;IAAAG,QAAA,EACvBV,IAAI,CAACW,GAAG,CAAC,CAACC,IAAI,EAAEC,MAAM,KAAK;MAC1B,IAAIC,MAAM,GAAG,CACX,QAAQ,EACR,SAAS,EACT,OAAO,EACP,QAAQ,EACR,KAAK,EACL,MAAM,EACN,MAAM,EACN,SAAS,EACT,UAAU,EACV,SAAS,EACT,QAAQ,EACR,SAAS,CACV;MAED,IAAIC,KAAK,GAAG,IAAIZ,IAAI,CAACS,IAAI,CAACV,IAAI,CAAC;MAC/B,IAAIc,GAAG,GAAGD,KAAK,CAACE,OAAO,CAAC,CAAC;MACzB,IAAIC,KAAK,GAAGJ,MAAM,CAACC,KAAK,CAACI,QAAQ,CAAC,CAAC,CAAC;MACpC,IAAIC,IAAI,GAAGL,KAAK,CAACM,WAAW,CAAC,CAAC;MAC9B,IAAIC,OAAO,GAAGP,KAAK,CAACQ,UAAU,CAAC,CAAC;MAChC,IAAIC,KAAK,GAAGT,KAAK,CAACU,QAAQ,CAAC,CAAC;MAE5B,IAAIC,aAAa,GAAI,GAAEF,KAAM,IAAGF,OAAQ,EAAC;MACzC,oBACEzB,OAAA;QAAAa,QAAA,eACEb,OAAA;UAAgB8B,IAAI,EAAE,GAAG,GAAGf,IAAI,CAACgB,EAAG;UAAAlB,QAAA,gBAClCb,OAAA;YAAAa,QAAA,EAAKE,IAAI,CAACR;UAAK;YAAAyB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACrBnC,OAAA;YAAAa,QAAA,EAAKgB;UAAa;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC;QAAA,GAFlBnB,MAAM;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAGX;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC;IAEV,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAEb,CAAC;AAACC,EAAA,GA9CInC,MAAM;AAgDZ,eAAeA,MAAM;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}